DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS compilation_events;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(250) NOT NULL,
email VARCHAR(254) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
annotation VARCHAR(2000) NOT NULL,
category_id INTEGER NOT NULL REFERENCES categories(id) ON DELETE RESTRICT,
created_on TIMESTAMP NOT NULL,
description VARCHAR(7000) NOT NULL,
event_date VARCHAR NOT NULL,
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE RESTRICT,
latitude FLOAT NOT NULL,
longitude FLOAT NOT NULL,
paid BOOLEAN NOT NULL,
participant_limit INTEGER NOT NULL,
published_on TIMESTAMP,
request_moderation BOOLEAN NOT NULL,
state VARCHAR(100) NOT NULL,
title VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
event_id INTEGER NOT NULL REFERENCES events(id) ON DELETE RESTRICT,
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE RESTRICT,
created TIMESTAMP NOT NULL,
status VARCHAR(100) NOT NULL,
PRIMARY KEY (event_id, user_id)
);

CREATE TABLE IF NOT EXISTS compilations (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
title VARCHAR(50) NOT NULL,
pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS compilation_events (
compilation_id INTEGER NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
event_id INTEGER NOT NULL REFERENCES events(id) ON DELETE CASCADE,
PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS comments (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
author_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
event_id INTEGER NOT NULL REFERENCES events(id) ON DELETE CASCADE,
text VARCHAR(300) NOT NULL,
created TIMESTAMP NOT NULL
);